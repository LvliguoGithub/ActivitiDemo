<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">
       
	<context:property-placeholder location="classpath:system.properties"/>
	<context:component-scan base-package="com.tplink.demo"/>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}"/>
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}"/>
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}"/>
		<property name="maxStatements" value="${c3p0.maxStatements}"/>
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
		<property name="idleConnectionTestPeriod" value="${c3p0.idleConnectionTestPeriod}"/>
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
		<property name="breakAfterAcquireFailure" value="${c3p0.breakAfterAcquireFailure}"/>
		<property name="testConnectionOnCheckout" value="${c3p0.testConnectionOnCheckout}"/>
	</bean>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.connection.driver_class">${jdbc.driverClass}</prop>
				<prop key="hibernate.connection.url">${jdbc.jdbcUrl}</prop>
				<prop key="hibernate.connection.username">${jdbc.user}</prop>
				<prop key="hibernate.connection.password">${jdbc.password}</prop>
				<prop key="hibernate.show_sql">${hibernate.showSql}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.connection.release_mode">${hibernate.connection.release_mode}</prop>
				<prop key="hibernate.autoReconnection">${hibernate.autoReconnection}</prop>
				<prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>
				<prop key="hibernate.connection.provider_class">${hibernate.connection.provider_class}</prop>
				<prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
			</props>
		</property>
		
		<property name="packagesToScan">
			<list>
				<value>com.tplink.demo.*.entity</value>
				<value>com.tplink.demo.**.entity</value>
			</list>
		</property>
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="search*" read-only="true" propagation="SUPPORTS"/>
			<tx:method name="*"  propagation="REQUIRED" rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.tplink.demo..*Service.*(..))"/>
	</aop:config>
       
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
    	<property name="transactionManager" ref="transactionManager" />
    	<property name="databaseType" value="${jdbc.dbType}"/>
    	<property name="databaseSchemaUpdate" value="true" />
    	<property name="jobExecutorActivate" value="false" />
	    <property name="asyncExecutorEnabled" value="false" />
	    <property name="asyncExecutorActivate" value="false" />
	    <property name="createDiagramOnDeploy" value="true" />
	    <!-- 处理流程图中文乱码问题 -->
	    <property name="activityFontName" value="宋体" />
	    <property name="labelFontName" value="宋体" />
	    <property name="annotationFontName" value="宋体"></property>
    </bean>
    <bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
    	<property name="processEngineConfiguration" ref="processEngineConfiguration"></property>
    </bean>
    <bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService" />
  	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService" />
  	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService" />
  	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService" />
</beans>